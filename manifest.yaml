# ClusterRole for pod-creator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-creator
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create"]

---
# ClusterRole for pod-lister
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-lister
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]

---
# ClusterRoleBinding for pod-creator and k8s-creator-group
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-creator-binding
subjects:
  - kind: Group
    name: k8s-rbac-demo:k8s-creator
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: pod-creator
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRoleBinding for pod-lister and k8s-reader-group
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-lister-binding
subjects:
  - kind: Group
    name: k8s-rbac-demo:k8s-lister
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: pod-lister
  apiGroup: rbac.authorization.k8s.io

---
# Service account for pod-service app
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-service-sa

---
# ClusterRoleBinding for pod-service-sa and cluster-admin
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-service-admin-binding
subjects:
  - kind: ServiceAccount
    name: pod-service-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
# Deployment for pod-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-service
  template:
    metadata:
      labels:
        app: pod-service
    spec:
      serviceAccountName: pod-service-sa
      containers:
        - name: pod-service
          image: ahmadibraspectrocloud/pod-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          command: ["/bin/sh"]
          args: ["-c", "/pod-service"]

---
# Service exposing pod-service app
apiVersion: v1
kind: Service
metadata:
  name: pod-service
spec:
  selector:
    app: pod-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000

